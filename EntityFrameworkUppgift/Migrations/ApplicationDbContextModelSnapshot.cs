// <auto-generated />
using EntityFrameworkUppgift.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkUppgift.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EntityFrameworkUppgift.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Göteborg",
                            Name = "Olof Olofsson",
                            PhoneNumber = "0733456021"
                        },
                        new
                        {
                            Id = 2,
                            City = "Stockholm",
                            Name = "Per Persson",
                            PhoneNumber = "0733456022"
                        },
                        new
                        {
                            Id = 3,
                            City = "Malmö",
                            Name = "Anders Andersson",
                            PhoneNumber = "0733456023"
                        },
                        new
                        {
                            Id = 4,
                            City = "Borås",
                            Name = "Rolf Rolfsson",
                            PhoneNumber = "0733456024"
                        },
                        new
                        {
                            Id = 5,
                            City = "Gbg",
                            Name = "Björn Björnsson",
                            PhoneNumber = "0733456025"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
